//---------------------------------------------------//
//           Astronaut Library.js - Notify           //
//                                                   //
// Author: AndrÃ© Malveira.                           //
// Github: https://github.com/andremalveira          //
// Site:   https://andremalveira.github.io/astronaut //
//---------------------------------------------------//

/*//NOTIFY SETTINGS/OPTIONS
  {      
    message: 'text -> second text (optional)',
    icon: 'link img' or 'code svg or div',
    link: {
      message: 'link', // where you want to redirect by clicking on the message 
      icon: 'link' // where you want to redirect by clicking on the icon 
    },
    type: 'string', // 'info', 'warn', 'error', 'off', 'success',
    style: {
      theme: 'string', // 'dark' or not declare,
      background: '#color', // or '#color -> 2px' !Second parameter is optional, he declare background with blur
      color: '#color', // color Text
      closeColor: '#color', // color of icon Close (x)
      closeBackground: '#color', // background of icon Close 
      closeSize: string, // size of icon Close 
      iconColor: '#color', // color of icon defined in icon: ''  
      iconSize: string, // Size of icon defined in icon: ''  
      border: string, // color of Border
      filter: string, // value of filter:
      margin: string, // notification distance from the sides of the screen 
      timeout: string, // notification appearance animation time 
    },
  }
  How to initiate?
  <script src="astronaut.notify.js"></script>
  <script>astronaut.notify({message: 'you message'})</script>
*/

let notify={name:"astronaut",create:{id:()=>Date.now().toString(36)+Math.random().toString(36).substr(2,5)},check:{isImg:url=>null!=url.match(/\.(jpeg|jpg|gif|png|svg|webp|bmp)$/)},insert:{css(css,id,currentScript){if(css&&id){var newStyle=document.createElement("style");if(id=astronaut.name+"-"+id+"-css",newStyle.id=id,newStyle.textContent=css,document.head.querySelector(`style#${id}`)){var styletag=document.head.querySelector(`style#${id}`);styletag.textContent!=css&&(styletag.textContent=css)}else document.head.appendChild(newStyle);currentScript&&document.currentScript.remove()}else console.error(`ðŸ’” ${astronaut.name}.insert.css()! Error when inserting css because you did not inform the ${null==id||""==id?`second parameter was not defined id! Ex: ${astronaut.name}.insert.css('css', 'id')`:null==css||""==css?`the first parameter was not defined or the first parameter is empty css! Ex: ${astronaut.name}.insert.css('css', 'id')`:""}`)}},notify(params){if(params){var ID=astronaut.create.id(),message=!!params.message&&params.message,icon=params.icon?params.icon:"",link=!!params.link&&params.link,style=!!params.style&&params.style,theme=!!style.theme&&style.theme,autoClose=!!params.autoClose&&params.autoClose;if(type=!!params.type&&params.type,ok=!!message,icon&&""!=icon&&(linkIcon=!(!link||!link.icon)&&link.icon,isImg=!!icon&&this.check.isImg(icon),icon=icon?isImg?`<div class="icon bg-none"><img src="${icon}"></div>`:`<div class="icon"><i>${icon}</i></div>`:"",icon=linkIcon?`<a href="${linkIcon}">${icon}</a>`:icon),message){var mfirst=(message=message.split("->"))[0]?message[0]:"",msecond=message[1]?message[1]:"",linkMessage=!(!link||!link.message)&&link.message;message=`<div class="details"><span title="${mfirst}">${mfirst}</span><p title="${msecond}">${msecond}</p></div>`,message=link&&linkMessage?`<a href="${linkMessage}">${message}</a>`:message}else console.warn(`ðŸ˜Š Please enter at least one message! Ex: ${this.name}.notify({message: 'you message'})`);type&&(type_props=["info","warn","error","off","success"],-1==type_props.indexOf(type)&&(ok=!1,console.error(`${this.name}.notify(type:'${type}'), The value informed is incorrect!`))),position=!!style.position&&style.position;var l="-",r="",posone="top",postwo="left",position_propsy=["top","bottom"],position_propsx=["left","right"];position&&(position=position.split("->"),posone=position[0].trim(),position[1]&&(postwo=position[1].trim()),-1!=position_propsy.indexOf(posone)&&-1!=position_propsx.indexOf(postwo)||(ok=!1,console.error(`${this.name}.notify(position:'${posone}->${postwo}' ), One of the values informed is incorrect!`)),posone==postwo&&(ok=!1,console.error(`${this.name}.notify(position:'${posone}->${postwo}'), You informed equal values!`)),"right"!=posone&&"right"!=postwo||(l="",r="-"));var mdy="2rem",mdx="2rem",bg=style.background?style.background:"#fff",color=style.color?style.color:"#878787",closeColor=style.closeColor?style.closeColor:"#878787",closeBackground=style.closeBackground?style.closeBackground:"#f2f2f2",iconColor=style.iconColor?style.iconColor:"#fff",border=style.border?style.border:"#2ecc71",iconSize=style.iconSize?style.iconSize:"1.7rem",closeSize=style.closeSize?style.closeSize:"0.8rem",margin=style.margin?style.margin:"2rem 2rem",filter=style.filter?style.filter:"none",timeout=style.timeout?style.timeout:"0.5s",bgBlur=!1,s=style;(s.background||s.color||s.closeColor||s.closeBackground||s.iconColor||s.border)&&(theme=!1),s.background&&s.background.indexOf("->")&&(bg=s.background.split("->")[0],bgBlur=s.background.split("->")[1]),margin.split(" ").length>=3&&(ok=!1,console.error(`${this.name}.notify(margin:'${margin}'), Margin property accepts only 2 arguments, eg 'arg1 arg2'!`)),margin=margin.split(" ");var notifyContainer=`\n        <div class="${this.name}_notify"><div class="all_notify"></div></div>\n      `,newNotifyHTML=`\n        <div ${autoClose?`id=${ID}`:""} class="new_notify ${type||""} ${theme&&!style.background||theme&&!style.color||theme&&!style.iconColor||theme&&!style.closeBackground||theme&&!style.closeColor?theme:""}">\n          <div class="content">\n            ${icon}\n            ${message}\n          </div>\n          <div class="close-icon"><i>${icons.close}</i></div>\n        </div>\n      `;if(css=`\n        /*Astronaut Library.js - Notify*/\n        .${this.name}_notify {\n          z-index: 99;\n          position: absolute;\n          max-height: 100%;\n          ${posone}: ${"default"==margin[0]?mdy:"bottom"==posone?margin[0].split("rem")[0]-1+"rem":margin[0]};\n          ${postwo}: ${null==margin[1]?mdx:margin[1]};\n          display: flex;\n          flex-direction: column;\n  \n          --dark-bg: #2d333b;\n          --dark-font: #adbac7;\n          --dark-icon: #fff;\n          --dark-close-background: #22272e94;\n          --dark-close-icon: #adbac7;\n\n          --info:    #74ace6;\n          --warn:    #f8cc51;\n          --error:   #eb6161;\n          --off:     #7a7b7a;\n          --success: #2ecc71;\n        }\n        .${this.name}_notify .all_notify::-webkit-scrollbar {\n          width: 8px;\n          border-radius: 0.4rem;\n          background: #22272e94;\n        }\n        .${this.name}_notify .all_notify::-webkit-scrollbar-thumb {\n          height: 8px;\n          border-radius: 0.4rem;\n          background: #2d333b;\n        }\n        .${this.name}_notify .all_notify::-webkit-scrollbar-track {\n          border-radius: 0.4rem;\n        }\n        .new_notify {\n          animation: show_notify ${timeout} ease forwards;\n          filter: ${filter};\n          display: grid;\n          grid-template-columns: 1fr auto;\n          background: ${bg};\n          ${bgBlur?`backdrop-filter: blur(${bgBlur});`:""}\n          border-radius: 10px;\n          border-left: 5px solid ${border};\n          box-shadow: 1px 7px 14px -5px rgba(0,0,0,0.35);\n          align-items: center;\n          overflow: hidden;\n          transition: ease 0.2s;\n          min-height: 3.5rem;\n          height: 3.5rem;\n          margin-bottom: 1rem;\n          padding: 16px 15px 16px 16px;\n          gap: 1rem;\n          opacity: 1;\n        }\n        .new_notify.minimize {\n          min-height: 0;\n          height: 0rem;\n          padding: 0px 15px 0px 16px;\n          margin-bottom: 0rem;\n        }\n        .new_notify.dark {background: var(--dark-bg);}\n        .new_notify.info {border-color: var(--info);}\n        .new_notify.warn {border-color: var(--warn);}\n        .new_notify.error {border-color: var(--error);}\n        .new_notify.off {border-color: var(--off);}\n        .new_notify.success {border-color: var(--success);}\n\n        @keyframes show_notify {\n          0%{ opacity: 0; height: 0rem;padding: 0px 15px 0px 16px;margin-bottom: 0rem;transform: translateX(${l}100%)}\n          25%{height: 3.5rem;margin-bottom: 1rem;padding: 16px 15px 16px 16px;}\n          40%{opacity: 1; transform: translateX(${r}10%);}\n          80%, 100%{transform: translateX(${r}0rem);}\n        }\n        \n        .new_notify.hide {\n          animation: hide_notify ${timeout} ease forwards;\n        }\n        @keyframes hide_notify {\n          0%{transform: translateX(${r}0rem);}\n          40%{transform: translateX(${r}10%);}\n          80%, 100%{\n            opacity: 0;\n            pointer-events: none;\n            transform: translateX(${l}100%);\n          }\n        }\n        .new_notify .content {\n          display: flex;\n          align-items: center;\n          user-select: none;\n          gap: 1rem;\n        }\n        .new_notify .content a {\n          text-decoration: none;\n        }\n        .new_notify .content .icon {\n          font-size: 25px;\n          color: ${iconColor};\n          height: 50px;\n          width: 50px;\n          text-align: center;\n          line-height: 50px;\n          border-radius: 50%;\n          background: ${border};\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          overflow: hidden;\n        }        \n\n        .new_notify.dark .content .icon {color: var(--dark-icon);}\n        .new_notify.info .content .icon {background: var(--info);}\n        .new_notify.warn .content .icon {background: var(--warn);}\n        .new_notify.error .content .icon {background: var(--error);}\n        .new_notify.off .content .icon {background: var(--off);}\n        .new_notify.success .content .icon {background: var(--success);}\n\n        .new_notify .content .icon.bg-none {\n          background: transparent;\n        }\n        .new_notify .content .icon i svg {\n          width: ${iconSize};\n          height: ${iconSize};\n        }\n        .new_notify.off .content .icon {\n          filter: grayscale(1);\n        }\n        .new_notify.off .content .icon i {\n          opacity: 0.5;\n        }\n        .new_notify .content .icon img {\n          border-radius: 50%;\n          width: 100%;\n        }\n        .new_notify .content .details{\n          width: 21rem;\n          overflow: hidden;\n          height: 3.5rem;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .new_notify .details span{\n          font-size: 20px;\n          font-weight: 500;\n        }\n        .new_notify .details p,\n        .new_notify .details span {\n          color: ${color};\n          margin: 0;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          display: block;\n        }\n        .new_notify.dark .details p, \n        .new_notify.dark .details span {\n          color: var(--dark-font);\n        }\n        .new_notify .details p {\n          opacity: 0.8\n        }\n        .new_notify .close-icon {\n          color: ${closeColor};\n          font-size: 23px;\n          cursor: pointer;\n          height: 40px;\n          width: 40px;\n          text-align: center;\n          line-height: 40px;\n          border-radius: 50%;\n          background: ${closeBackground};\n          transition: all 0.3s ease;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n        .new_notify.dark .close-icon {\n          color: var(--dark-close-icon);\n          background: var(--dark-close-background);\n        }\n        .new_notify :is(.icon, .close-icon) i {\n          display: flex;\n        }\n        .new_notify .close-icon i svg {\n          width: ${closeSize};\n          height: ${closeSize};\n        }\n        .new_notify .close-icon:hover{\n          filter: brightness(0.9);\n        }\n      `,(message||!message&&style)&&this.insert.css(css,"notify"),HTMLElement.prototype.notifyClose=function(e){var _notify=this.closest(".new_notify");_notify.classList.add("hide"),setTimeout(()=>{_notify.classList.add("minimize"),setTimeout(()=>{_notify.remove()},500)},1e3*timeout.split("s")[0]-100)},ok){var _notify=document.querySelector(`.${this.name}_notify`);_notify?_notify.querySelector(".all_notify").insertAdjacentHTML("beforeend",newNotifyHTML):(document.body.insertAdjacentHTML("beforeend",notifyContainer),document.querySelector(`.${this.name}_notify .all_notify`).insertAdjacentHTML("beforeend",newNotifyHTML));var all_notify=document.querySelector(`.${this.name}_notify .all_notify`);all_notify.querySelectorAll("div.new_notify").length>=7&&setTimeout(()=>{all_notify.querySelector("div.new_notify").notifyClose()},200);var close=!1,_btnClose;document.querySelectorAll(`.${this.name}_notify .close-icon`).forEach(btnClose=>{btnClose.addEventListener("click",()=>{btnClose.notifyClose(),close=!0})}),autoClose&&setTimeout(()=>{close||document.getElementById(ID).notifyClose()},5e3)}}else console.warn(`ðŸ˜Š Please inform the parameters! Ex: ${this.name}.notify({parameters})`)}};var howtouse="call the function this way: astronaut.notify({})";try{$astronautType;try{original=astronaut,astronaut="anything",astronaut=original,console.log("is var")}catch(err){console.log("%cIt looks like you already have the full astronaut library in your project, to avoid mistakes, if you are not using the full library and you only want to use a specific library, remove the full library! ðŸ¤” "," color: #ff8080;background-color: #290000;padding: 0.3rem 1.8rem 0.3rem 0.3rem;\n    font-size:0.8rem;border-radius:0.2rem;border: solid 1px #5c0000;\n    "),notify=howtouse}}catch(error){"undefined"==typeof astronaut?(window.astronaut=notify,notify=howtouse):astronaut=Object.assign(astronaut,notify)}